// Singleton Pattern â€” Uma Ãºnica instÃ¢ncia
// ğŸ§  Objetivo:
// Garantir que sÃ³ exista uma instÃ¢ncia de um objeto durante toda a execuÃ§Ã£o.

// ğŸ’¡ Quando usar:
// Gerenciadores de configuraÃ§Ã£o

// Controladores globais(ex: temas, autenticaÃ§Ã£o, cache)

// Banco de dados(em apps maiores)

// ğŸ“¦ Como funciona:
// Em vez de permitir que o objeto seja criado vÃ¡rias vezes, vocÃª cria uma Ãºnica vez e sempre retorna a mesma instÃ¢ncia.



const Caixalog = (() => {
    let instancia; // Ãºnica instÃ¢ncia


    function criarInstancia() {
        const mensagens = [];

        return {
            adicionar(mensagem) {
                mensagens.push(mensagem);
            },
            listar() {
                mensagens.forEach(m => {
                    console.log(m);
                })
            }
        }}

    return {
        getInstacia() {
            if (!instancia) {
                instancia = criarInstancia();
            }
            return instancia;
        }
    }
})();

const c1 = Caixalog.getInstacia();
c1.adicionar("Primeira InstÃ¢ncia");
c1.listar();